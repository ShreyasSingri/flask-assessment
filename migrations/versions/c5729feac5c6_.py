"""empty message

Revision ID: c5729feac5c6
Revises: 
Create Date: 2024-08-23 15:05:27.949842

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'c5729feac5c6'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('donor',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=True),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('contact', sa.String(), nullable=False),
    sa.Column('dob', sa.Date(), nullable=True),
    sa.Column('blood_group', sa.Enum('O+', 'O-', 'A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', name='blood_group_enum'), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('contact'),
    sa.UniqueConstraint('email')
    )
    op.create_table('inventory',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Numeric(), nullable=False),
    sa.Column('blood_group', sa.Enum('O+', 'O-', 'A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', name='blood_group_enum'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=True),
    sa.Column('email', sa.String(length=120), nullable=True),
    sa.Column('password', sa.String(length=128), nullable=True),
    sa.Column('role', sa.Enum('User', 'DonorManager', 'InventoryManager', 'BankManager', 'Hospital', name='role_enum'), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_user_email'), ['email'], unique=True)

    op.create_table('blood_donation',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('donor_id', sa.Integer(), nullable=False),
    sa.Column('donated_on', sa.DateTime(), nullable=True),
    sa.Column('expiry', sa.DateTime(), nullable=True),
    sa.Column('quantity', sa.Numeric(), nullable=False),
    sa.Column('blood_group', sa.Enum('O+', 'O-', 'A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', name='blood_group_enum'), nullable=False),
    sa.ForeignKeyConstraint(['donor_id'], ['donor.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('request',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('request_date', sa.DateTime(), nullable=True),
    sa.Column('requested_by', sa.Integer(), nullable=False),
    sa.Column('quantity', sa.Numeric(), nullable=False),
    sa.Column('blood_group', sa.Enum('O+', 'O-', 'A+', 'A-', 'B+', 'B-', 'AB+', 'AB-', name='blood_group_enum'), nullable=False),
    sa.Column('status', sa.Enum('Requested', 'Processing', 'Canclled', name='status_enum'), nullable=True),
    sa.Column('fulfilled_qty', sa.Numeric(), nullable=True),
    sa.ForeignKeyConstraint(['requested_by'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('request')
    op.drop_table('blood_donation')
    with op.batch_alter_table('user', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_user_email'))

    op.drop_table('user')
    op.drop_table('inventory')
    op.drop_table('donor')
    # ### end Alembic commands ###
